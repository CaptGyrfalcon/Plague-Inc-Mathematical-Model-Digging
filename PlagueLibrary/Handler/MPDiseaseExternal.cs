public static void DiseaseTest(MPDiseaseData d);
public static IntPtr GetPointer(MPDiseaseData d, bool ignoreError = false);
if (d != null && MPDiseaseExternal.diseasePointers != null && d.id < MPDiseaseExternal.diseasePointers.Length);
if (!ignoreError);
public static IntPtr GetPointer(MPLocalDiseaseData ld);
public static IntPtr GetPointer(MPCountryData c);
public static void SetDiseases(MPDiseaseData d);
if (MPDiseaseExternal.diseaseHandles != null);
foreach (GCHandle gchandle in MPDiseaseExternal.diseaseHandles);
if (gchandle.IsAllocated);
for (int j = 0; j < d.Length; j++);
public static void SetCountries(MPCountryData c);
if (MPDiseaseExternal.countryHandles != null);
foreach (GCHandle gchandle in MPDiseaseExternal.countryHandles);
if (gchandle.IsAllocated);
for (int j = 0; j < c.Length; j++);
public static void SetLocalDiseases(MPLocalDiseaseData ld);
if (MPDiseaseExternal.localDiseaseHandles != null);
foreach (GCHandle gchandle in MPDiseaseExternal.localDiseaseHandles);
if (gchandle.IsAllocated);
for (int j = 0; j < ld.Length; j++);
public static void DiseaseUpdate(MPDiseaseData d, long totalPop);
public static void DiseasePostLocalUpdate(MPDiseaseData dat, long totalPop, long infectedPop);
public static void DiseaseInitialise(MPDiseaseData d);
public static int GetGeneticDriftCost(MPDiseaseData d, int cost);
if (pointer == IntPtr.Zero);
public static bool CheckEvo(MPDiseaseData d);
public static void SetEvoPoints(MPDiseaseData d, int points);
if (pointer == IntPtr.Zero);
public static bool CheckTurn(MPDiseaseData d);
public static void SetTurn(MPDiseaseData d, int turn);
public static void Cleanup();
if (MPDiseaseExternal.diseaseHandles != null);
foreach (GCHandle gchandle in MPDiseaseExternal.diseaseHandles);
if (gchandle.IsAllocated);
if (MPDiseaseExternal.countryHandles != null);
foreach (GCHandle gchandle2 in MPDiseaseExternal.countryHandles);
if (gchandle2.IsAllocated);
if (MPDiseaseExternal.localDiseaseHandles != null);
foreach (GCHandle gchandle3 in MPDiseaseExternal.localDiseaseHandles);
if (gchandle3.IsAllocated);